%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% to split transformations (tf messages)  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
null do split_tf(Transforms)    <- tf__0__tfMessage(Transforms).

split_tf([Head|Tale]) :- 
				Head = geometry_msgs__0__TransformStamped(std_msgs__0__Header(_, [Sec, NSec], Parent), Child, geometry_msgs__0__Transform(
																			  geometry_msgs__0__Vector3(P1,P2,P3), 																				  geometry_msgs__0__Quaternion(Q1,Q2,Q3,Q4))
																			  ),
			     	new_event(tf(Parent,Child,[P1,P2,P3],[Q1,Q2,Q3,Q4]),Sec,NSec),
                                split_tf(Tale).
split_tf([]) .						  	     
			
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% to split the markers  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
null do split_ar_pose(Markers)  <- ar_pose__0__ARMarkers(Header,Markers).	


split_ar_pose([Head|Tale]) :- 
				Head=ar_pose__0__ARMarker(
							  std_msgs__0__Header(Seq, [Sec, NSec], Name), _Id,
							  geometry_msgs__0__PoseWithCovariance(   geometry_msgs__0__Pose(   geometry_msgs__0__Point(P1,P2,P3),
											       			            geometry_msgs__0__Quaternion(Q1,Q2,Q3,Q4)   ),
									                       	  _Covariance   ),
						         _Conf
							 ),
				new_event( ar_marker(Seq,Name,[[P1,P2,P3],[Q1,Q2,Q3,Q4]],Sec,NSec), Sec,NSec ),
 				split_ar_pose(Tale).	
split_ar_pose([]).

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% to split the markers  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
interpolate_tf(Id,T,Pos):- 
			prev(Id, tf(V1,Q1), T1, _, T),
       			next_inf(Id, tf(V2,Q2), T2, _, T),
			datime_interpolate(T1,T2,T,Fraction),
			interpolate_quaternion(V1,Q1,V2,Q2,[Fraction],Pos).

transform_marker(RelativePos,Time,AbsolutePose):-
						convert_to_datime(Time,T),	
						interpolate_tf(odom_base,T,P1),										
						interpolate_tf(base_torso,T,P2),
						interpolate_tf(torso_neck,T,P3),
						interpolate_tf(neck_head,T,P4),
						interpolate_tf(head_cam,T,P5),
						transform_quaternion([P1,P2,P3,P4,P5,RelativePos],AbsolutePose).

%syncronized(	
%      		geometry_msgs__0__PoseStamped(std_msgs__0__Header(Seq, [Sec,NSec], Name),geometry_msgs__0__Pose(geometry_msgs__0__Point(P11,P12,P13),geometry_msgs__0__Quaternion%%(Q11,Q12,Q13,Q14))), 
%                transform_marker(RelPose,[Sec,NSec],[[P11,P12,P13],[Q11,Q12,Q13,Q14]]),
%      	        [[odom_base,Z],[base_torso,Z],[torso_neck,Z],[neck_head,Z],[head_cam,Z]]  		 
% 	      )     
%		 
%			<- ar_marker(Seq,Name,RelPose,Sec,NSec) where (Z is Sec + (NSec * 0.000000001) ).
%                       
                             


